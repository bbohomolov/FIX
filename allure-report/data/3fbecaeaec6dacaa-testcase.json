{
  "uid" : "3fbecaeaec6dacaa",
  "name" : "TestClass.test_login_negative[symbolic email]",
  "title" : "Test login negative [symbolic email]",
  "time" : {
    "start" : 1487579695144,
    "stop" : 1487579695515,
    "duration" : 371
  },
  "summary" : {
    "attachments" : 2,
    "steps" : 4
  },
  "failure" : {
    "message" : "AssertionError: Received response 200 status doesn't equal 400",
    "stackTrace" : "self = <tests.login_test.TestClass instance at 0x7f73b67b4a28>\nparam_test = ('!@^&#%&*', 'cityslicka')\n\n    @allure.feature(\"Login\")\n    @allure.testcase(\"Negative: Login test email/password check\")\n    @allure.severity(pytest.allure.severity_level.CRITICAL)\n    def test_login_negative(self, param_test):\n        (email, password) = param_test\n        r = u.send_post_request(self.login_request, {'email': email, 'password': password})\n        u.attach_response(r.text)\n        u.attach_sent_URL(r.url)\n>       u.check_response_status(r.status_code, requests.codes.bad)\n\ntests/login_test.py:67: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python2.7/dist-packages/allure/common.py:57: in impl\n    return func(*a, **kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.my_utils.MyUtils instance at 0x7f73b71018c0>, actual = 200\nexpected = 400\n\n    @allure.step(\"Check response status.\")\n    def check_response_status(self, actual, expected):\n>       assert actual == expected, \"Received response \" + str(actual) + \" status doesn't equal \" + str(expected)\nE       AssertionError: Received response 200 status doesn't equal 400\n\ntests/my_utils.py:12: AssertionError"
  },
  "description" : null,
  "severity" : "CRITICAL",
  "status" : "FAILED",
  "testId" : {
    "name" : "Negative: Login test email/password check",
    "url" : "Negative: Login test email/password check"
  },
  "suite" : {
    "uid" : "c1b11da70c9becbb",
    "name" : "tests.login_test",
    "title" : "Login test"
  },
  "steps" : [ {
    "name" : "Send POST request.",
    "title" : "Send POST request.",
    "time" : {
      "start" : 1487579695145,
      "stop" : 1487579695487,
      "duration" : 342
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ ],
    "steps" : [ ]
  }, {
    "name" : "Received response.",
    "title" : "Received response.",
    "time" : {
      "start" : 1487579695487,
      "stop" : 1487579695487,
      "duration" : 0
    },
    "summary" : {
      "attachments" : 1,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ {
      "title" : "Received response",
      "source" : "2943d575-763b-4367-95a1-5b9ad67f6cee-attachment.json",
      "type" : "application/json",
      "size" : 28,
      "uid" : "b3e586ef2e59fcbf"
    } ],
    "steps" : [ ]
  }, {
    "name" : "Sent URL.",
    "title" : "Sent URL.",
    "time" : {
      "start" : 1487579695487,
      "stop" : 1487579695487,
      "duration" : 0
    },
    "summary" : {
      "attachments" : 1,
      "steps" : 0
    },
    "status" : "PASSED",
    "attachments" : [ {
      "title" : "Sent URL",
      "source" : "38ce5747-cd7c-4c7a-a6f9-f126afc6d499-attachment.txt",
      "type" : "text/plain",
      "size" : 27,
      "uid" : "9e37b9dfad903853"
    } ],
    "steps" : [ ]
  }, {
    "name" : "Check response status.",
    "title" : "Check response status.",
    "time" : {
      "start" : 1487579695487,
      "stop" : 1487579695488,
      "duration" : 1
    },
    "summary" : {
      "attachments" : 0,
      "steps" : 0
    },
    "status" : "FAILED",
    "attachments" : [ ],
    "steps" : [ ]
  } ],
  "attachments" : [ ],
  "issues" : [ ],
  "labels" : [ {
    "name" : "severity",
    "value" : "critical"
  }, {
    "name" : "host",
    "value" : "bbohomolov"
  }, {
    "name" : "suite-title",
    "value" : null
  }, {
    "name" : "suite-name",
    "value" : "tests.login_test"
  }, {
    "name" : "thread",
    "value" : "11272-MainThread"
  }, {
    "name" : "feature",
    "value" : "Login"
  }, {
    "name" : "testId",
    "value" : "Negative: Login test email/password check"
  } ],
  "parameters" : [ ]
}