{
  "defectsList" : [ {
    "title" : "Product defects",
    "status" : "FAILED",
    "defects" : [ {
      "uid" : "273ae7a46fccb5ca",
      "failure" : {
        "message" : "AssertionError: Received response 200 status doesn't equal 404",
        "stackTrace" : "self = <tests.login_test.TestClass instance at 0x7f8381a2fd88>\nparam_test = ({'email': '1', 'password': '1'}, 404, 'error')\n\n    @allure.feature(\"Login\")\n    @allure.testcase(\"Login\")\n    @allure.severity(pytest.allure.severity_level.CRITICAL)\n    def test_login(self, param_test):\n        (data, code, expected_response) = param_test\n        r = u.send_post_request(self.login_request, data)\n        u.attach_response(r.text)\n        u.attach_sent_url(r.url+str(data))\n>       u.check_response_status(r.status_code, code)\n\ntests/login_test.py:38: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python2.7/dist-packages/allure/common.py:57: in impl\n    return func(*a, **kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.my_utils.MyUtils instance at 0x7f838230cd40>, actual = 200\nexpected = 404\n\n    @allure.step(\"Check response status.\")\n    def check_response_status(self, actual, expected):\n>       assert actual == expected, \"Received response \" + str(actual) + \" status doesn't equal \" + str(expected)\nE       AssertionError: Received response 200 status doesn't equal 404\n\ntests/my_utils.py:12: AssertionError"
      },
      "testCases" : [ {
        "uid" : "d65be5ae1de987d5",
        "name" : "TestClass.test_login[invalid email/password]",
        "title" : "Test login [invalid email/password]",
        "time" : {
          "start" : 1487591138559,
          "stop" : 1487591139113,
          "duration" : 554
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "37dd197e98c6c033",
      "failure" : {
        "message" : "AssertionError: Received response 201 status doesn't equal 400",
        "stackTrace" : "self = <tests.register_test.TestClass instance at 0x7f83819df518>\nparam_test = ({'email': 'peter@klaven', 'password': 'cityslicka'}, 400, 'error')\n\n    @allure.feature(\"Register\")\n    @allure.testcase(\"Register\")\n    @allure.severity(pytest.allure.severity_level.CRITICAL)\n    def test_register(self, param_test):\n        (data, code, expected_response) = param_test\n        r = u.send_post_request(self.register_request, data)\n        u.attach_response(r.text)\n        u.attach_sent_url(r.url+str(data))\n>       u.check_response_status(r.status_code, code)\n\ntests/register_test.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python2.7/dist-packages/allure/common.py:57: in impl\n    return func(*a, **kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.my_utils.MyUtils instance at 0x7f83823f4908>, actual = 201\nexpected = 400\n\n    @allure.step(\"Check response status.\")\n    def check_response_status(self, actual, expected):\n>       assert actual == expected, \"Received response \" + str(actual) + \" status doesn't equal \" + str(expected)\nE       AssertionError: Received response 201 status doesn't equal 400\n\ntests/my_utils.py:12: AssertionError"
      },
      "testCases" : [ {
        "uid" : "400e2c651f369677",
        "name" : "TestClass.test_register[existent account]",
        "title" : "Test register [existent account]",
        "time" : {
          "start" : 1487591139795,
          "stop" : 1487591140149,
          "duration" : 354
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      }, {
        "uid" : "94d7bbfe85f019b7",
        "name" : "TestClass.test_create[existent user]",
        "title" : "Test create [existent user]",
        "time" : {
          "start" : 1487591135385,
          "stop" : 1487591135941,
          "duration" : 556
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      }, {
        "uid" : "98385f6e18286317",
        "name" : "TestClass.test_create[w/o name]",
        "title" : "Test create [w/o name]",
        "time" : {
          "start" : 1487591135947,
          "stop" : 1487591136477,
          "duration" : 530
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      }, {
        "uid" : "41f942cc6f3f0e39",
        "name" : "TestClass.test_create[w/o job]",
        "title" : "Test create [w/o job]",
        "time" : {
          "start" : 1487591136483,
          "stop" : 1487591136831,
          "duration" : 348
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      }, {
        "uid" : "974777b95e5c1e5b",
        "name" : "TestClass.test_create[w/o parameters]",
        "title" : "Test create [w/o parameters]",
        "time" : {
          "start" : 1487591136837,
          "stop" : 1487591137187,
          "duration" : 350
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      } ]
    }, {
      "uid" : "31567129743f9f7d",
      "failure" : {
        "message" : "AssertionError: Received response 201 status doesn't equal 404",
        "stackTrace" : "self = <tests.register_test.TestClass instance at 0x7f8381a8af80>\nparam_test = ({'email': '1', 'password': '1'}, 404, 'error')\n\n    @allure.feature(\"Register\")\n    @allure.testcase(\"Register\")\n    @allure.severity(pytest.allure.severity_level.CRITICAL)\n    def test_register(self, param_test):\n        (data, code, expected_response) = param_test\n        r = u.send_post_request(self.register_request, data)\n        u.attach_response(r.text)\n        u.attach_sent_url(r.url+str(data))\n>       u.check_response_status(r.status_code, code)\n\ntests/register_test.py:39: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n/usr/local/lib/python2.7/dist-packages/allure/common.py:57: in impl\n    return func(*a, **kw)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ \n\nself = <tests.my_utils.MyUtils instance at 0x7f83823f4908>, actual = 201\nexpected = 404\n\n    @allure.step(\"Check response status.\")\n    def check_response_status(self, actual, expected):\n>       assert actual == expected, \"Received response \" + str(actual) + \" status doesn't equal \" + str(expected)\nE       AssertionError: Received response 201 status doesn't equal 404\n\ntests/my_utils.py:12: AssertionError"
      },
      "testCases" : [ {
        "uid" : "b0a4253e69333962",
        "name" : "TestClass.test_register[invalid email/password]",
        "title" : "Test register [invalid email/password]",
        "time" : {
          "start" : 1487591140830,
          "stop" : 1487591141180,
          "duration" : 350
        },
        "severity" : "CRITICAL",
        "status" : "FAILED"
      } ]
    } ]
  }, {
    "title" : "Test defects",
    "status" : "BROKEN",
    "defects" : [ ]
  } ]
}